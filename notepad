#9063
# import sys
# _, *plist = map(int, sys.stdin.read().split())
# print((max(plist[::2])-min(plist[::2]))*(max(plist[1::2])-min(plist[1::2])))

#  '_'는 첫 번째 요소를 무시하는 데 사용되며, *rest는 남은 요소를 리스트로 가져옵니다.

# 원래 코드에서 _, *plist = map(int, sys.stdin.read().split()) 부분은 sys.stdin.read().split()로
# 읽어들인 데이터를 정수로 변환한 뒤, 첫 번째 값을 무시하고 나머지 값을 plist 리스트에 할당하는 것을 나타냅니다.
#이렇게 함으로써 plist에는 입력 데이터의 정수 값들만 들어가게 됩니다.
#--------------------------------------------------------------------------------------------------------
#1929
#에라토스테네스의 체 알고리즘

# import sys

# # n보다 작거나 같은 소수들의 리스트를 반환하는 함수
# def get_primes(n):
#     # 0과 1은 소수가 아니므로 False로 초기화
#     is_prime = [False, False] + [True] * (n-1)
#     primes = []
#     for i in range(2, n+1):
#         if is_prime[i]:
#             primes.append(i)
#             # i의 배수들을 모두 소수가 아닌 것으로 표시
#             for j in range(i*2, n+1, i):
#                 is_prime[j] = False
#     return primes

# # 입력받은 두 수의 범위를 저장
# m, n = map(int, sys.stdin.readline().split())

# # n보다 작거나 같은 소수들의 리스트를 구함
# primes = get_primes(n)

# # m부터 n까지의 수 중에서 소수인 수를 출력
# for p in primes:
#     if p >= m:
#         print(p)
# TMI: x가 2부터 int(x의 제곱근)+1 까지의 수로 나누어떨어지면 소수가 아님